<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>缘决</title>
  
  <subtitle>向着星辰与大海</subtitle>
  <link href="http://54coconi.github.io/atom.xml" rel="self"/>
  
  <link href="http://54coconi.github.io/"/>
  <updated>2023-02-24T14:38:06.477Z</updated>
  <id>http://54coconi.github.io/</id>
  
  <author>
    <name>缘决</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Netlify部署个人网站</title>
    <link href="http://54coconi.github.io/posts/c5617d7d.html"/>
    <id>http://54coconi.github.io/posts/c5617d7d.html</id>
    <published>2022-12-02T19:00:00.000Z</published>
    <updated>2023-02-24T14:38:06.477Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Netlify部署个人网站"><a href="#Netlify部署个人网站" class="headerlink" title="Netlify部署个人网站"></a>Netlify部署个人网站</h1><p><a href="https://www.netlify.com/">Netlify</a> 是一个提供静态资源网络托管的综合平台，提供CI服务，能够将托管 GitHub，GitLab 等网站上的 Jekyll，Hexo，Hugo 等代码自动编译并生成静态网站。</p><p>Netlify 有如下的功能:</p><ul><li>能够托管服务，免费 CDN</li><li>能够绑定自定义域名</li><li>能够启用免费的TLS证书，启用HTTPS</li><li>支持自动构建</li><li>提供 Webhooks 和 API</li></ul><p>听起来是不是很香，那接下来我教大家如何将自己在本地写好的网页部署到Netlify上👇</p><blockquote><ol><li>首先，打开你的 <strong><a href="https://www.baidu.com">Baidu</a></strong> 浏览器，输入 netlify 关键字并搜索，当然你也可以不用这么麻烦直接点击 <strong><a href="https://www.netlify.com/">Netlify官网</a></strong> 直达主页</li><li>来到下图所示的页面即是成功的进入了网站（感兴趣的懂English的可以看看网站的介绍，话说谁吃的没事干看这玩意儿，小声BB😅），如果你是初次使用<strong>Netlify</strong>则需要注册才能登录（废话），具体步骤参照图片所示</li></ol></blockquote><p><img src="https://s2.loli.net/2022/12/01/RlSh1Xp7kGPFVyW.png" style="zoom:60%;" /></p><p><img src="https://s2.loli.net/2022/12/01/8cCLQBRGUYJISkx.png" alt="2022-12-01_230845"></p><blockquote><ol><li><p>以GitHub登录为例（<strong>强烈建议</strong>）</p><p>注册并登录成功后，你将会看到如下页面，不要慌！！！虽然全是English，但你可以借助Edge自带的翻译功能（Edge真的很强大，有时间单独出一期使用技巧😉）或者用翻译软件、插件翻译。这里我就不一一介绍Netlify的各个功能了，一两句话也说不完，我们主要是把咱们的个人网站给部署到Netlify的免费服务器上让全世界的人们都能通过网址看到网站。废话不多说，开干！！！</p><blockquote><p>1)  点击右上方的绿色按钮 <strong>New site from Git</strong> 按照提示与仓库进行关联</p><p><img src="https://s2.loli.net/2022/12/03/P4vw36ir9CZu7DN.png" alt=""></p><p>2)  选择GiitHub如下图，这时候会弹出授权登录的窗口，直接点击绿色按钮授权就可以</p><p><img src="https://s2.loli.net/2022/12/03/GPaF7V9NmhsAbcz.png" alt=""></p><p><img src="https://s2.loli.net/2022/12/03/qnf3kY48wPuXaAK.png" alt=""></p><p>3) 选中需要部署的GitHub仓库，我这里选择test仓库</p><p><img src="https://s2.loli.net/2022/12/03/9ay2qc3dHJBl6ME.png" alt=""></p><p>4) 成功之后会弹出可以预览的地址，点击打开就可以了。以后每一次代码修改之后提交到GitHub就会自动发布</p></blockquote><p>❗❗❗ 注意：如果你的静态网页是<strong>手写</strong>的即非框架生成的，那么在你需要部署网页的GitHub仓库根目录下应该有 <strong><code>index.html</code></strong> 文件，经过实测 <strong><code>index.html</code></strong> 文件<strong>必须</strong>在仓库的<strong>根目录</strong>下而不能在其它文件夹下。例如我的 <strong><code>index.html</code></strong> 在 <code>test/site/</code> 目录下则netlify将无法识别出网页文件，自然的点击netlify提供的二级域名后不会显示出页面</p></li><li><p>直接上传文件到netlify（不推荐）</p><p>当然你也可以直接上传文件到netlify，但是这样当你需要改动网页内容时就会变得十分麻烦，适合长时间不改动的页面显示，具体步骤如下图</p><p>选择添加新页面</p><blockquote><p><img src="https://s2.loli.net/2022/12/03/RbNyOhpGWuv97Hj.png" alt=""></p><p>选择手动部署</p><p><img src="https://s2.loli.net/2022/12/03/P2WI8c4kpUVgTdu.png" alt=""></p><p>拖放你的网站输出文件夹（注意：这里是文件夹，该文件夹为默认根目录，故 <code>index.html</code> 应该在其下）到圆圈中或者浏览并上传，如下图</p><p><img src="https://s2.loli.net/2022/12/03/PCcfk87bwJBohuK.png" alt=""></p></blockquote></li></ol></blockquote><p>至此，使用netlify简单部署网页结束</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Netlify部署个人网站&quot;&gt;&lt;a href=&quot;#Netlify部署个人网站&quot; class=&quot;headerlink&quot; title=&quot;Netlify部署个人网站&quot;&gt;&lt;/a&gt;Netlify部署个人网站&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.netli</summary>
      
    
    
    
    <category term="Netlify" scheme="http://54coconi.github.io/categories/Netlify/"/>
    
    
    <category term="Netlify" scheme="http://54coconi.github.io/tags/Netlify/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯之基础训练</title>
    <link href="http://54coconi.github.io/posts/9d52573b.html"/>
    <id>http://54coconi.github.io/posts/9d52573b.html</id>
    <published>2022-11-25T19:00:00.000Z</published>
    <updated>2023-02-24T14:38:06.477Z</updated>
    
    <content type="html"><![CDATA[<h1>目录</h1><hr><ol><li><a href="#jump1">字符串对比</a></li><li><a href="#jump2">芯片测试</a></li><li><a href="#jump3">完美的代价</a></li></ol><hr><h2 id="1-字符串对比"><a href="#1-字符串对比" class="headerlink" title="1. 字符串对比"></a><span id="jump1">1. 字符串对比</span></h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a><span id="问题描述">问题描述</span></h3><blockquote><p>给定两个仅由大写字母或小写字母组成的字符串(长度介于1到10之间)，它们之间的关系是以下4种情况         之一：</p><ol><li><p>两个字符串长度不等。比如 Beijing 和 Hebei</p></li><li><p>两个字符串不仅长度相等，而且相应位置上的字符完全一致(区分大小写)，比如 Beijing 和 Beijing</p></li><li><p>两个字符串长度相等，相应位置上的字符仅在不区分大小写的前提下才能达到完全一致（也就是说，它并不满足情况2）。比如 beijing 和 BEIjing</p></li><li><p>两个字符串长度相等，但是即使是不区分大小写也不能使这两个字符串一致。比如 Beijing 和 Nanjing</p></li></ol><p>编程判断输入的两个字符串之间的关系属于这四类中的哪一类，给出所属的类的编号。</p></blockquote><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><blockquote><p>包括两行，每行都是一个字符串</p></blockquote><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><blockquote><p>仅有一个数字，表明这两个字符串的关系编号（即1、2、3、4）</p></blockquote><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">BEIjing</span><br><span class="line">beiJing</span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="【思路分析】"><a href="#【思路分析】" class="headerlink" title="【思路分析】"></a>【思路分析】</h3><ol><li>先判断字符串长度</li><li>当字符串长度相等时再判断各个字符</li></ol><h3 id="【完整源码】"><a href="#【完整源码】" class="headerlink" title="【完整源码】"></a>【完整源码】</h3><p>语言：<strong><code>Java</code></strong></p><blockquote><p>这里我们可以直接使用 Java的 <code>equals()</code> 方法来判断字符串是否完全一致（即<a href="#问题描述">问题描述</a>的情况2）,用 <code>equalsIgnoreCase()</code> 方法来判断在<strong>忽略大小写</strong>的情况下字符串是否完全一致（即<a href="#问题描述">问题描述</a>的情况3）</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Strcmp</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">String</span> <span class="variable">str1</span> <span class="operator">=</span> sc.next();</span><br><span class="line">        <span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> sc.next();</span><br><span class="line">        <span class="comment">// 判断字符串长度</span></span><br><span class="line">        <span class="keyword">if</span> (str1.length() != str2.length()) &#123;</span><br><span class="line">            System.out.println(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (str1.equals(str2)) &#123;</span><br><span class="line">                System.out.println(<span class="number">2</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (str1.equalsIgnoreCase(str2))&#123;</span><br><span class="line">                System.out.println(<span class="number">3</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="number">4</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>语言：<strong><code>C</code></strong></p><blockquote><ol><li><p>strcat函数——字符串连接函数</p><p>一般形式：strcat(字符数组1，字符数组2)</p></li><li><p>strcpy函数——字符串复制函数</p><p>一般形式：strcpy(字符数组1，字符数组2)</p></li><li><p>strcmp函数——字符串比较函数</p><p>一般形式：strcmp(字符数组1，字符数组2)</p><p>比较规则：自左至右<strong>逐个字符</strong>比较，直至出现不同字符（于ASCII码而言），或遇到‘\0’为止。</p><p>比较结果由函数值带回：</p><blockquote><p><em>字符串1=字符串2，函数值为0</em></p><p><em>字符串1&gt;字符串2，函数值为正数</em></p><p><em>字符串1&lt;字符串2，函数值为负数</em></p></blockquote></li><li><p>strlen函数——测字符串长度的函数</p><p>一般形式：strlen(字符数组)</p></li><li><p>strlwr函数——转化为小写的函数</p><p>一般形式：strlwr(字符数组)</p></li><li><p>strupr函数——转化为大写的函数</p><p>一般形式：strupr(字符数组)</p></li></ol></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">char</span> a[<span class="number">100</span>];</span><br><span class="line"><span class="type">char</span> b[<span class="number">100</span>];</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> flag;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,a);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,b);</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strlen</span>(a)!=<span class="built_in">strlen</span>(b))</span><br><span class="line">        flag=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">strcmp</span>(a,b)==<span class="number">0</span>)</span><br><span class="line">        flag=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">strcmp</span>(strlwr(a),strlwr(b))==<span class="number">0</span>)</span><br><span class="line">        flag=<span class="number">3</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        flag=<span class="number">4</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,flag);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-芯片测试"><a href="#2-芯片测试" class="headerlink" title="2. 芯片测试"></a>2. <span id="jump2">芯片测试</span></h2><h3 id="问题描述-1"><a href="#问题描述-1" class="headerlink" title="问题描述"></a><span id="">问题描述</span></h3><blockquote><ol><li>有n（2≤n≤20）块芯片，有好有坏，已知好芯片比坏芯片多。</li><li>每个芯片都能用来测试其他芯片。用好芯片测试其他芯片时，能正确给出被测试芯片是好还是坏。而坏芯片测试其他芯片时，会随机给出好或是坏的测试结果（即此结果与被测试芯片实际的好坏无关）。</li><li>给出所有芯片的测试结果，问哪些芯片是好芯片。</li></ol></blockquote><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><blockquote><p>输入数据第一行为一个整数n，表示芯片个数。</p><p>第二行到第n+1行为n*n的一张表，每行n个数据。表中的每个数据为0或1，在这n行中的第i行第j列（1≤i, j≤n）的数据表示用第i块芯片测试第j块芯片时得到的测试结果，1表示好，0表示坏，i=j时一律为1（并不表示该芯片对本身的测试结果。芯片不能对本身进行测试）。</p></blockquote><h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><blockquote><p>按从小到大的顺序输出所有好芯片的编号</p></blockquote><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line"><span class="number">1</span> <span class="number">0</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="【思路分析】-1"><a href="#【思路分析】-1" class="headerlink" title="【思路分析】"></a>【思路分析】</h3><blockquote><p>这个题重在思考，想通了原理，编程非常简单！<br>题目中的一个条件非常重要：已知<strong>好芯片比坏芯片多</strong><br>因此随便拿一个芯片，看所有芯片对它的评价即分别拿所有的芯片去依次测试它,如果测试结果为1的数量大于0的数量,该被测芯片就是好的.<br>思路找到了，那么程序中怎么去求所有芯片对一个芯片的评价之和呢？<br>其实很简单,例如二维数组的第 1 列(j = 0)其实就分别表示,第 i+1 个芯片对第1个芯片的评价，第 2 列(j = 1)其实就分别表示,第 i+1 个芯片对第2个芯片的评价，依次类推。换言之，直接判断第 j+1列1和0的个数，如果1的个数多，那么第 j+1 个芯片就是好的。</p></blockquote><h3 id="【完整源码】-1"><a href="#【完整源码】-1" class="headerlink" title="【完整源码】"></a>【完整源码】</h3><p>语言：<strong><code>Java</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ChipTesting</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="comment">// 输入n,n大于2，小于20</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="type">int</span>[][] arr = <span class="keyword">new</span> <span class="title class_">int</span>[n][n];</span><br><span class="line">        <span class="comment">// 输入测试结果</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">                arr[i][j] = sc.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//查看所有芯片对第j+1个芯片的测试结果</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">                <span class="comment">// sum为测试结果是 1 的个数</span></span><br><span class="line">                sum += arr[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (sum &gt; n - sum) &#123;</span><br><span class="line">                <span class="comment">// 如果1的个数大于0的个数 ，则为好芯片</span></span><br><span class="line">                System.out.print((j+<span class="number">1</span>) + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-完美的代价"><a href="#3-完美的代价" class="headerlink" title="3. 完美的代价"></a><span id="jump3">3. 完美的代价</span></h2>]]></content>
    
    
    <summary type="html">记录我参加蓝桥杯赛前所刷的一些题目</summary>
    
    
    
    <category term="蓝桥杯" scheme="http://54coconi.github.io/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
    <category term="蓝桥杯" scheme="http://54coconi.github.io/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>我的第一个HTML文件</title>
    <link href="http://54coconi.github.io/posts/c6ea800.html"/>
    <id>http://54coconi.github.io/posts/c6ea800.html</id>
    <published>2022-11-19T17:01:33.000Z</published>
    <updated>2023-02-24T14:38:06.477Z</updated>
    
    
    
    
    <category term="HTML" scheme="http://54coconi.github.io/categories/HTML/"/>
    
    
    <category term="HTML" scheme="http://54coconi.github.io/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>我的第一个Python程序</title>
    <link href="http://54coconi.github.io/posts/e6ddf652.html"/>
    <id>http://54coconi.github.io/posts/e6ddf652.html</id>
    <published>2022-11-19T17:00:55.000Z</published>
    <updated>2023-02-24T14:38:06.477Z</updated>
    
    
    
    
    <category term="Python" scheme="http://54coconi.github.io/categories/Python/"/>
    
    
    <category term="Python" scheme="http://54coconi.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>我的第一个C程序</title>
    <link href="http://54coconi.github.io/posts/e43d2c1c.html"/>
    <id>http://54coconi.github.io/posts/e43d2c1c.html</id>
    <published>2022-11-19T17:00:41.000Z</published>
    <updated>2023-02-24T14:38:06.477Z</updated>
    
    
    
    
    <category term="C" scheme="http://54coconi.github.io/categories/C/"/>
    
    
    <category term="C" scheme="http://54coconi.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>我的第一个Java程序</title>
    <link href="http://54coconi.github.io/posts/c2b75353.html"/>
    <id>http://54coconi.github.io/posts/c2b75353.html</id>
    <published>2022-11-19T17:00:11.000Z</published>
    <updated>2023-02-24T14:38:06.477Z</updated>
    
    
    
    
    <category term="Java" scheme="http://54coconi.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="http://54coconi.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://54coconi.github.io/posts/4a17b156.html"/>
    <id>http://54coconi.github.io/posts/4a17b156.html</id>
    <published>2022-11-07T10:00:00.000Z</published>
    <updated>2023-02-24T14:38:06.477Z</updated>
    
    <content type="html"><![CDATA[<hr><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h1 id="hexo创建文章"><a href="#hexo创建文章" class="headerlink" title="hexo创建文章"></a>hexo创建文章</h1><h3 id="1、创建一个文章"><a href="#1、创建一个文章" class="headerlink" title="1、创建一个文章"></a>1、创建一个文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>更多信息请参照: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="2、运行服务"><a href="#2、运行服务" class="headerlink" title="2、运行服务"></a>2、运行服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>更多信息请参照: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="3、生成静态文件"><a href="#3、生成静态文件" class="headerlink" title="3、生成静态文件"></a>3、生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">test</summary>
    
    
    
    
  </entry>
  
</feed>
